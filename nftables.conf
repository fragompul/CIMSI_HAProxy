table ip filter {

    chain input {
        type filter hook input priority 0; policy drop;
        ip protocol icmp counter accept; # Permitir solicitudes ICMP (ping)
        tcp dport 80 counter accept; # Permitir solicitudes HTTP
        udp dport 9993 counter accept; # Puerto usado por la VPN ZeroTier
        tcp dport 6443 counter accept; # API de kubernetes
        tcp dport 10250 counter accept; # Puerto usado por kubelet
        tcp dport {30000-32767} counter accept; # Puerto usado por Nodeport
        ip saddr 10.152.183.0/24 counter accept; # Permitir paquetes red intenrna
        udp dport 53 counter accept; # Peticiones DNS
        tcp dport 2379-2380 counter accept; # Puertos usados por los pods
        tcp dport 443 counter accept; # Peticiones HTTPS (imágenes docker)
    }

    chain forward {
        type filter hook forward priority 0; policy drop;
        ip saddr 10.152.183.0/24 counter accept; # Red interna
        tcp dport {30000-32767} counter accept; # Nodeport
        udp dport 53 counter accept; # DNS
    }
    chain output {
         type filter hook output priority 0; policy drop;
         ip protocol icmp counter accept; # Peticiones ICMP
         tcp sport 80 counter accept; # Peticiones HTTP
         udp dport 9993 counter accept; # Enlace ZeroTier
         tcp sport 6443 counter accept; # API de kubernetes
         tcp sport 10250 counter accept; # Kubelet
         tcp sport {30000-32767} counter accept; # Nodeport
         udp dport 53 counter accept; # Peticiones DNS                  
         tcp dport 443 counter accept; # Peticiones HTTPS (imágenes docker)
         ip saddr 10.152.183.0/24 counter accept; # Red interna
    }
}
